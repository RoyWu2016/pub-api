<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<mvc:annotation-driven />
	<!--<mvc:annotation-driven enable-matrix-variables="true"
		content-negotiation-manager="contentNegotiationManager" />
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="application/json" />
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="parameterName" value="mediaType" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="useJaf" value="false" />
	</bean> -->
	<context:component-scan base-package="com.ai.api, version" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

	<!-- Enable AspectJ style of Spring AOP -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!--<aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>-->
	<!-- AOP configuration -->
	<aop:config>
		<!-- Pointcuts -->
		<aop:pointcut id="controllerPointcut" expression="execution(public * com.ai.api.controller.*.*(..) )"/>
		<!-- Aspects -->
		<aop:aspect id="controllerAspect1" ref="controllerAspect">
			<!--&lt;!&ndash;<aop:before method="log" pointcut="execution(* *.*.*.*.*.*.getUserProfile(..))" />&ndash;&gt;-->
			<!--&lt;!&ndash; <aop:after method="logAfter" pointcut-ref="controllerLogPointcut" /> &ndash;&gt;-->
			<aop:around method="aroundInController" pointcut-ref="controllerPointcut"/>
		</aop:aspect>
	</aop:config>

	<!--, com.ai.commons.services.TokenJWTService -->
	<!--com.ai.api, -->
	<!--<context:annotation-config/> -->


	<!--<context:spring-configured/> -->

	<!--<bean id="permissionHandler" class="com.ai.commons.security.PermissionHandler" -->
	<!--p:userServiceUrl="https://192.168.0.31:8777/user-service" p:module="${securityModule}" 
		/> -->

	<mvc:interceptors>
		<bean class="com.ai.commons.interceptor.TokenCheckInterceptor" />
	</mvc:interceptors>

	<!--<context:component-scan base-package="com.ai.api, version"> -->
	<!--&lt;!&ndash;<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>&ndash;&gt; -->
	<!--</context:component-scan> -->

	<!-- Enables swgger ui -->
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
	<mvc:resources mapping="/webjars/**"
		location="classpath:/META-INF/resources/webjars/" />

	<!-- Include a swagger configuration -->
	<bean name="/applicationSwaggerConfig" class="com.ai.api.config.ApplicationSwaggerConfig" />

	<!-- bean that will enable json to be returned -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManager">
				<constructor-arg>
					<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<constructor-arg>
							<map>
								<entry key="json" value="application/json" />
								<entry key="xml" value="application/xml" />
							</map>
						</constructor-arg>
					</bean>
				</constructor-arg>
			</bean>
		</property>

		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="prefixJson" value="true" />
				</bean>
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size: 200MB -->
		<property name="maxUploadSize">
			<value>209715200</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

</beans>
