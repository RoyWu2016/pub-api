<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>
    <context:spring-configured/>
    <!--<bean id="contextApplicationContextProvider" class="com.ai.commons.spring.ApplicationContextProvider"/>-->
    <context:component-scan base-package="com.ai.commons.service, com.ai.api">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController" />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <context:property-placeholder
            location="classpath:env/profile-${active.profile}.properties"
            ignore-unresolvable="true"/>
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <bean id="tokenJWTService" class="com.ai.commons.services.TokenJWTService"/>

    <!--<bean id="customerService" class="com.ai.api.service.impl.CustomerServiceImpl" />-->

    <!--<bean id="permissionHandler" class="com.ai.commons.security.PermissionHandler"-->
    <!--p:userServiceUrl="${user.service.url}" p:module="${securityModule}"/>-->

    <!--
    <bean id="permissionHandler" class="com.ai.commons.security.PermissionHandler"
          p:userServiceUrl="${user.service.url}" p:module="Hellolllll"/>

    <bean id="ipTrustServiceProtectionFilter"
          class="com.ai.userservice.client.filter.IPTrustServiceProtectionFilter"
          p:service="${user.service.url}/auth/get-white-list"
          p:authnUrl="${user.service.url}/auth/authn"
          p:protectEverything="false" p:ignoreServiceCallTokenCheck="true"
          p:millisBetweenCleanUps="120000"/>
    -->

    <bean id="serviceConfig" class="com.ai.api.config.ServiceConfig"
          p:customerServiceUrl="${customer.service.lb.url}"
          p:paramServiceUrl="${parameter.service.lb.url}"
          p:factoryServiceUrl="${factory.service.lb.url}"
          p:fileServiceUrl="${file.service.lb.url}"
          p:mwServiceUrl="${middleware.booking-1.service.url}"
          p:checklistServiceUrl="${checklist.service.lb.url}"
          p:reportServiceUrl="${report.service.lb.url}"
          p:fileMaximumSize="${file.service.total.file.size.limitation}"
          p:psiServiceUrl="${inspection.service.lb.url}"
          p:ssoUserServiceUrl="${user.service.lb.url}"
          p:redisPassword="${redis.password}"
          p:redisPort="${redis.port}"
          p:redisHost="${redis.host}"
          p:aimsServiceBaseUrl="${aims.service.base.lb.url}"
          p:programServiceBaseUrl="${program.service.base.lb.url}"
          p:financeServiceBaseUrl="${finance.service.base.lb.url}"
          p:ipServiceBaseUrl="${ip.service.base.lb.url}"
          p:excleLoggoCommonSource="${resource.share.folder}"
          p:lotusApiUrl="${lotus.api.url}"
          p:aimsBucket="${aims.bucket}"
          p:maxRequestSize="${max.multiplart.request.size}" />

    <bean id="redisUtil" class="com.ai.api.util.RedisUtil">
        <property name="serviceConfig" ref="serviceConfig"/>
    </bean>

    <bean id="app" class="com.ai.api.App"/>
    <bean id="draftService" class="com.ai.api.service.impl.DraftServiceImpl"/>
    <bean id="auditService" class="com.ai.api.service.impl.AuditServiceImpl"/>
    <bean id="userService" class="com.ai.api.service.impl.UserServiceImpl"/>
    <bean id="parameterService" class="com.ai.api.service.impl.ParameterServiceImpl"/>
    <bean id="orderService" class="com.ai.api.service.impl.OrderServiceImpl"/>
    <bean id="reportService" class="com.ai.api.service.impl.ReportServiceImpl"/>

    <bean id="customerDao" class="com.ai.api.dao.impl.CustomerDaoImpl"/>

    <!--<bean id="userDao" class="com.ai.api.dao.impl.UserDaoImpl">-->
    <!--<property name="jdbcTemplate" ref="jdbcTemplate"/>-->
    <!--</bean>-->

    <!--<bean id="loginLogDao" class="com.ai.api.dao.impl.LoginLogDaoImpl">-->
    <!--<property name="jdbcTemplate" ref="jdbcTemplate"/>-->
    <!--</bean>-->

    <bean id="draftDao" class="com.ai.api.dao.impl.DraftDaoImpl"/>
    <bean id="tokenJWTDao" class="com.ai.api.dao.impl.TokenJWTDaoImpl"/>
    <bean id="paramDao" class="com.ai.api.dao.impl.ParameterDaoImpl"/>
    <bean id="companyDao" class="com.ai.api.dao.impl.CompanyDaoImpl"/>
    <bean id="ssoUserServiceDao" class="com.ai.api.dao.impl.SSOUserServiceDaoImpl"/>
    <bean id="factoryDao" class="com.ai.api.dao.impl.FactoryDaoImpl"/>
    <bean id="orderDao" class="com.ai.api.dao.impl.OrderDaoImpl"/>
    <bean id="auditDao" class="com.ai.api.dao.impl.AuditDaoImpl"/>
    <bean id="featureDao" class="com.ai.api.dao.impl.FeatureDaoImpl"/>
    <bean id="reportDao" class="com.ai.api.dao.impl.ReportDaoImpl"/>
    <bean id="callResult" class="com.ai.commons.beans.ApiCallResult"/>

    <bean id="cacheManager" class="com.ai.commons.cache.CacheManager"/>
    <bean id="commonParamService" class="com.ai.commons.services.ParameterService"
          p:PARAMETER_SERVICE_URL="${parameter.service.lb.url}"/>


    <bean id="fileService" class="com.ai.commons.services.FileService" p:fileServiceUrl="${file.service.lb.url}"
          p:localTempDir="${local.temp.folder}"/>

    <!--<bean id="performanceMonitorAspect" class="com.ai.api.bean.aop.PerformanceMonitorAspect" />-->

    <bean id="controllerAspect" class="com.ai.api.bean.aop.ControllerAspect"/>


    <!-- Version bean for application information -->
    <!--<bean id="versionBean" class="version.Version"/>-->


    <!-- Scheduler configuration -->
    <import resource="spring-scheduler.xml"/>
</beans>
