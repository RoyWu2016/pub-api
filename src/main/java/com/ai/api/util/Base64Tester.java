package com.ai.api.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;

@SuppressWarnings("restriction")
public class Base64Tester {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		// String path = "E:/test.docx";
		// String path = "E:/test.xlsx";
		// String path = "E:/test.pdf";
		String path = "E:/test.xls";
		File file = new File(path);
		FileInputStream inputFile = new FileInputStream(file);
		byte[] buffer = new byte[(int) file.length()];
		inputFile.read(buffer);
		inputFile.close();
		String result = Base64.encode(buffer);

		String str = "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";
		byte[] code = Base64.decode(str);
		OutputStream os = new FileOutputStream("E:\\roy.xlsx");
		os.write(code);
		os.flush();
		os.close();
		System.out.println(result);
		// return new BASE64Encoder().encode(buffer);

	}

}
