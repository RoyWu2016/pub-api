package com.ai.api.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;

@SuppressWarnings("restriction")
public class Base64Tester {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		// String path = "E:/test.docx";
		// String path = "E:/test.xlsx";
		// String path = "E:/test.pdf";
		String path = "E:/test.xls";
		File file = new File(path);
		FileInputStream inputFile = new FileInputStream(file);
		byte[] buffer = new byte[(int) file.length()];
		inputFile.read(buffer);
		inputFile.close();
		String result = Base64.encode(buffer);

		String str = "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";
		byte[] code = Base64.decode(str);
		OutputStream os = new FileOutputStream("E:\\roy.xlsx");
		os.write(code);
		os.flush();
		os.close();
		System.out.println(result);
		// return new BASE64Encoder().encode(buffer);

	}

}
